{"version":3,"sources":["App.js","history.js","output.js","keyboard.js","serviceWorker.js","index.js"],"names":["App","props","onClick","button","calculate","reset","backspace","lastChar","state","output","slice","length","setState","this","eval","error","className","id","Component","History","Output","Keyboard","e","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.91dbe170.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport History from \"./history\";\nimport Output from \"./output\";\nimport Keyboard from \"./keyboard\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      output: \"\",\n    };\n  }\n\n  onClick = (button) => {\n    if (button === \"=\") {\n      this.calculate();\n    } else if (button === \"clear\") {\n      this.reset();\n    } else if (button === \"backspace\") {\n      this.backspace();\n    } else {\n      let lastChar = this.state.output.slice(this.state.output.length - 1);\n      // eslint-disable-next-line no-unused-expressions\n      lastChar === \"%\" && button === \"%\"\n        ? \"\"\n        : lastChar === \"-\" && button === \"-\"\n        ? \"\"\n        : lastChar === \"+\" && button === \"+\"\n        ? \"\"\n        : this.setState({\n            output: this.state.output + button,\n          });\n    }\n  };\n\n  calculate() {\n    try {\n      this.setState({\n        // eslint-disable-next-line no-eval\n        output: (eval(this.state.output) || \"\") + \"\",\n      });\n    } catch (error) {\n      this.setState({\n        output: \"error\",\n      });\n    }\n  }\n\n  reset() {\n    this.setState({\n      output: \"\",\n    });\n  }\n\n  backspace() {\n    this.setState({\n      output: this.state.output.slice(0, -1),\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div id=\"calculator\">\n            <div id=\"result\">\n              <History />\n              <Output output={this.state.output} />\n            </div>\n            <Keyboard onClick={this.onClick} />\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n\nclass History extends Component {\n    render() { \n        return ( \n            <div id=\"history\">\n                <p id=\"history-value\"></p>\n              </div>\n         );\n    }\n}\n \nexport default History;","import React, { Component } from 'react';\n\nclass Output extends Component {\n    render() { \n        let {output} = this.props;\n        return (\n            <div id=\"output\">\n                <p id=\"output-value\">{output}</p>\n              </div>\n          );\n    }\n}\n \nexport default Output;","import React, { Component } from \"react\";\n\nclass Keyboard extends Component {\n  render() {\n    return (\n      <div id=\"keyboard\">\n        <button className=\"operator\" id=\"clear\" onClick={e => this.props.onClick(e.target.id)}>\n          C\n        </button>\n        <button className=\"operator\" id=\"backspace\" onClick={e => this.props.onClick(e.target.id)}>\n          CE\n        </button>\n        <button className=\"operator\" id=\"%\" onClick={e => this.props.onClick(e.target.id)}>\n          %\n        </button>\n        <button className=\"operator\" id=\"/\" onClick={e => this.props.onClick(e.target.id)}>\n          &#247;\n        </button>\n        <button className=\"number\" id=\"7\" onClick={e => this.props.onClick(e.target.id)}>\n          7\n        </button>\n        <button className=\"number\" id=\"8\" onClick={e => this.props.onClick(e.target.id)}>\n          8\n        </button>\n        <button className=\"number\" id=\"9\" onClick={e => this.props.onClick(e.target.id)}>\n          9\n        </button>\n        <button className=\"operator\" id=\"*\" onClick={e => this.props.onClick(e.target.id)}>\n          &times;\n        </button>\n        <button className=\"number\" id=\"4\" onClick={e => this.props.onClick(e.target.id)}>\n          4\n        </button>\n        <button className=\"number\" id=\"5\" onClick={e => this.props.onClick(e.target.id)}>\n          5\n        </button>\n        <button className=\"number\" id=\"6\" onClick={e => this.props.onClick(e.target.id)}>\n          6\n        </button>\n        <button className=\"operator\" id=\"-\" onClick={e => this.props.onClick(e.target.id)}>\n          -\n        </button>\n        <button className=\"number\" id=\"1\" onClick={e => this.props.onClick(e.target.id)}>\n          1\n        </button>\n        <button className=\"number\" id=\"2\" onClick={e => this.props.onClick(e.target.id)}>\n          2\n        </button>\n        <button className=\"number\" id=\"3\" onClick={e => this.props.onClick(e.target.id)}>\n          3\n        </button>\n        <button className=\"operator\" id=\"+\" onClick={e => this.props.onClick(e.target.id)}>\n          +\n        </button>\n        <button className=\"dot\" id=\".\" onClick={e => this.props.onClick(e.target.id)}>\n          .\n        </button>\n        <button className=\"number\" id=\"0\" onClick={e => this.props.onClick(e.target.id)}>\n          0\n        </button>\n        <button className=\"empty\" id=\"empty\"></button>\n        <button className=\"operator\" id=\"=\" onClick={e => this.props.onClick(e.target.id)}>\n          =\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Keyboard;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}